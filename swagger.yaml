openapi: 3.0.0
servers:
# Added by API Auto Mocking Plugin
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/ayannahindonesia/Asira/1.0.0
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/ayannahindonesia/asira/1.0.0
  - description: Indonesia Asira dev
    url: https://dev-indo.asira.com/v1
  - description: Indonesia Asira staging
    url: https://staging-indo.asira.com/v1
info:
  version: "1.0.0"
  title: Asira API documentation
  description: >-
    <p>all documentation is restricted to internal only</p>
tags:
  - name: Banks CRUD
    description: notification category like otp, push notif, etc
  - name: User CRUD
    description: user
  - name: Loans CRUD
    description: user
  - name: Loan Transactions CRUD
    description: user
  - name: Notification
    description: notification category like otp, push notif, etc
  - name: Borrower
    description: endpoints that will be used by borrower user
  - name: Lender
    description: endpoint that will be used by lender user
  - name: Tokens
    description: all endpoints that serve for token / login
security:
  - application:
      - read
      - write
paths:
  /clientauth:
    get:
      tags:
        - Tokens
      summary: initial client login using base64 encoded client key and secret
      parameters:
        - $ref: '#/components/parameters/authtoken'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/jwtResponse'
        '401':
          description: Unauthorized
        '422':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
  /client/borrower_login:
    post:
      tags:
        - Tokens
      summary: login for borrower role. can use phone or email for the key
      parameters:
        - $ref: '#/components/parameters/authtoken'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/borrowerLoginRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/jwtResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
  /otp:
    post:
      tags:
        - Borrower
      summary: send otp message to borrower
      parameters:
        - $ref: '#/components/parameters/authtoken'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/otpRequest'
      responses:
        '200':
          description: OK
  /register:
    post:
      tags:
        - Borrower
      summary: Register borrower account
      parameters:
        - $ref: '#/components/parameters/authtoken'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registerRequest'
      description: >-
        <p>requesting to borrower register endpoint.</p>
      responses:
        '201':
          description: Created
        '401':
          description: Unauthorized
        '422':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ErrorResponse'
  /profile:
    get:
      tags:
        - Borrower
      summary: get current borrower profile datas
      parameters:
        - $ref: '#/components/parameters/authtoken'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/profileData'
    patch:
      tags:
        - Borrower
      summary: edit current borrower profile data
      parameters:
        - $ref: '#/components/parameters/authtoken'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/profilePatchRequest'
      responses:
        '200':
          description: OK
  /loan_history:
    get:
      tags:
        - Borrower
      summary: get current borrower history. default is ordered by recent.
      parameters:
        - $ref: '#/components/parameters/authtoken'
        - in: query
          name: p
          schema:
            type: integer
            example: 2
          description: current page
        - in: query
          name: ordr
          schema:
            type: string
            example: date
          description: order by
        - in: query
          name: sort
          schema:
            type: string
            example: "asc, desc"
          description: current page
        - in: query
          name: id
          schema:
            type: string
            example: trx_01
            description: loan id
        - in: query
          name: amount
          schema:
            type: string
            example: "2000000"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/loanList'
  /loan_apply:
    post:
      tags:
        - Borrower
      summary: request loan application
      parameters:
        - $ref: '#/components/parameters/authtoken'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loanApplication'
      responses:
        '200':
          description: OK
          # content:
          #   application/json:
          #     schema:
          #       type: object
          #       allOf:
          #         - $ref: '#/components/schemas/loanList'
components:
  schemas:
    borrowerLoginRequest:
      properties:
        key:
          type: string
          example: 08123456789
        password:
          type: string
          example: password
    jwtResponse:
      properties:
        expires_in:
          type: number
          example: 1200
        token:
          type: string
          example: eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFuZHJva2V5IiwiaXNfaWfaweiufh2198eu9128jd98wjhdQxNjgsImp0aSI6ImFuZHJva2V5In0.gCPTFIe-GnE9pduQaCfOV8hGo5ttXOalE9Egrsjb9f832hw9eijhdw98jhDVxWa1u6cWfSxMrCReviekgkqflZdA
    otpRequest:
      properties:
        otp_type:
          type: string
          example: registration
          enum:
            - registration
            - loan_application
        phone_number:
          type: string
          example: "081234567890"
    registerRequest:
      properties:
        fullname:
          type: string
          example: Benedict Cucumbatch
        gender:
          type: string
          example: Male
          enum:
            - Male
            - Female
        idcard_number:
          type: string
          example: 543219876231
        taxid_number:
          type: string
          example: 1928374650
        email:
          type: string
          example: ben@avenger.com
        birthday:
          type: string
          example: "1999-12-31T00:00:00.000Z"
          description: format yyyy-mm-ddThh:mm:ssZ
        birthplace:
          type: string
          example: Cambridge
        last_education:
          type: string
          example: Master
        mother_name:
          type: string
          example: Eve
        phone:
          type: string
          example: 081234567890
        marriage_status:
          type: string
          example: married
        spouse_name:
          type: string
          example: Benny
          description: nama pasangan
        spouse_birthday:
          type: string
          example: "1999-12-31T00:00:00.000Z"
          description: format yyyy-mm-ddThh:mm:ssZ
        spouse_lasteducation:
          type: string
          example: Master
        dependants:
          type: number
          example: 3
          description: tanggunan
        address:
          type: string
          example: sesame st.
        province:
          type: string
          example: le province
        city:
          type: string
          example: el city
        neighbour_association:
          type: string
          example: 001
          description: rukun tetangga
        hamlets:
          type: string
          example: 002
          description: rukun warga
        home_phonenumber:
          type: string
          example: 021234567
        subdistrict:
          type: string
          example: setiabudi
          description: kecamatan
        urban_village:
          type: string
          example: sukadamai
          description: kelurahan
        home_ownership:
          type: string
          example: private owned
          description: status kepemilikan rumah
        lived_for:
          type: number
          example: 24
          description: in month
        occupation:
          type: string
          example: magician
        employee_id:
          type: string
          example: 4132
        employer_name:
          type: string
          example: stark industries
        employer_address:
          type: string
          example: street that never was
        department:
          type: string
          example: magics
        been_workingfor:
          type: number
          example: 16
          description: in month
        direct_superiorname:
          type: string
          example: Tony Stark
        employer_number:
          type: string
          example: 021987653
          description: employer office phone number
        monthly_income:
          type: number
          example: 8000000
          description: monthly
        other_income:
          type: number
          example: 2000000
          description: monthly
        other_incomesource:
          type: string
          example: magic performance
        field_of_work:
          type: string
          example: magics
          enum:
            - IT
            - Human Resource
            - Building Industries
        related_personname:
          type: string
          example: Bella
          description: other related person that not living in the same roof
        related_relation:
          type: string
          example: friend
        related_phonenumber:
          type: string
          example: 082345678912
        related_homenumber:
          type: string
          example: 02123456789
        password:
          type: string
          example: iamgroot
      required: 
        - fullname
        - gender
        - idcard_number
        - email
        - birthday
        - birthplace
        - last_education
        - mother_name
        - phone
        - marriage_status
        - dependants
        - address
        - province
        - city
        - neighbour_association
        - hamlets
        - subdistrict
        - urban_village
        - home_ownership
        - lived_for
        - occupation
        - employer_name
        - employer_address
        - department
        - been_workingfor
        - employer_number
        - monthly_income
        - field_of_work
        - related_personname
        - related_relation
        - related_phonenumber
        - password
    profileData:
      properties:
        firstname:
          type: string
          example: Benedict
        lastname:
          type: string
          example: Cucumbatch
        birthday:
          type: string
          example: "1999-12-31T00:00:00.000Z"
          description: format yyyy-mm-ddThh:mm:ssZ
        country:
          type: string
          example: the country
        province:
          type: string
          example: le province
        city:
          type: string
          example: el city
        address:
          type: string
          example: sesame st.
        phone:
          type: string
          example: "081234567890"
        email:
          type: string
          example: ben@avenger.com
        occupation:
          type: string
          example: magician
        employer_name:
          type: string
          example: stark industries
        field_of_work:
          type: string
          example: magics
          enum:
            - IT
            - Human Resource
            - Building Industries
        monthly_income:
          type: number
          example: 500000000
        start_working_at:
          type: string
          example: "1999-12-31T00:00:00.000Z"
          description: format yyyy-mm-ddThh:mm:ssZ
        gender:
          type: string
          example: Male
          enum:
            - Male
            - Female
    profilePatchRequest:
      type: object
      properties:
        confirm_password:
          type: string
          example: password123
        firstname:
          type: string
          example: Benedict
        lastname:
          type: string
          example: Cucumbatch
        birthday:
          type: string
          example: "1999-12-31T00:00:00.000Z"
          description: format yyyy-mm-ddThh:mm:ssZ
        country:
          type: string
          example: the country
        province:
          type: string
          example: le province
        city:
          type: string
          example: el city
        address:
          type: string
          example: sesame st.
        phone:
          type: string
          example: "081234567890"
        email:
          type: string
          example: ben@avenger.com
        occupation:
          type: string
          example: magician
        employer_name:
          type: string
          example: stark industries
        field_of_work:
          type: string
          example: magics
          enum:
            - IT
            - Human Resource
            - Building Industries
        monthly_income:
          type: number
          example: 500000000
        start_working_at:
          type: string
          example: "1999-12-31T00:00:00.000Z"
          description: format yyyy-mm-ddThh:mm:ssZ
        gender:
          type: string
          example: Male
          enum:
            - Male
            - Female
        new_password:
          type: string
          example: iamgroot
    loanApplication:
      type: object
      properties:
        loan_type:
          type: string
          example: multifunction
          enum:
            - multifunction
            - payday
        amount:
          type: number
          example: 20000000
        installment:
          type: number
          example: 6
          description: loan installment in month
    loanList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/loanListDetail'
    loanListDetail:
      properties:
        id:
          type: string
          example: loan_01
        borrower:
          type: string
          example: borrower_01
          description: borrower id
        product:
          type: string
          example: multifunction
        applied_loan:
          type: number
          example: 2000000
        interest:
          type: number
          example: 3
          description: in percent
        fees:
          type: array
          items:
            $ref: '#/components/schemas/loanListDetailFees'
        installment:
          type: number
          example: 12
          description: in month
        installment_payment:
          type: number
          example: 50000
        status:
          type: string
          example: accepted
        due:
          type: string
          example: "10 May 2009"
          description: date when loan must be paid in full.
    loanListDetailFees:
      type: object
      properties:
        description:
          type: string
          example: fee_01
        amount:
          type: number
          example: 100
    ErrorResponse:
      type: object
      properties:
        details:
          type: object
        message:
          type: string
          example: this is your error message
  parameters:
    authtoken:
      required: true
      in: header
      name: Authorization
      schema:
        type: string
      description: JWT bearer token basic auth
      example: >-
        Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c

  securitySchemes:
    application:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'https://dev-indo.asira.com/v1/token'
          scopes:
            write: allows modifying resources
            read: allows reading resources